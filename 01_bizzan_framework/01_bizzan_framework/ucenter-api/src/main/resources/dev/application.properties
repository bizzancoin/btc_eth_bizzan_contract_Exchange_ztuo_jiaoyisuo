server.port=6001
server.context-path=/uc
spring.application.name=uc
logging.level.*=debug
#====================================================================================================
#====================================================================================================
#====================================================================================================
#eureka
eureka.client.serviceUrl.defaultZone=http://172.22.0.6:7000/eureka/
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}

eureka.instance.prefer-ip-address=true
#aliyun config
aliyun.accessKeyId=LTAI5tNCaVqRyHj3uHuXkux9
aliyun.accessKeySecret=AMaZnNtRB9Ztph552hSj1SKTCnbu2g
aliyun.ossEndpoint=oss-cn-hongkong.aliyuncs.com
aliyun.ossBucketName=btxchain
#datasource
spring.datasource.url=jdbc:mysql://172.22.0.6:3306/exchange?characterEncoding=utf-8&useSSL=false
spring.datasource.username=exchange
spring.datasource.password=NjfKttzTsrWeJ8jA1
#redis47.90.121.145
## redis服务器配置
#spring.redis.cluster.nodes=172.17.0.5:6379
spring.redis.host:172.22.0.6
spring.redis.port:6379
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=300
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=60000
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=20
## 连接超时时间（毫秒）
spring.redis.timeout=30000
## 连接密码
spring.redis.password=dmsLjNt3J5yfCydN
#mongodb
spring.data.mongodb.uri=mongodb://172.22.0.6:27017/bizzan
spring.data.mongodb.database=bizzan
#jpa
#spring.jpa.hibernate.ddl-auto=update
# sms
sms.driver=saiyou
sms.gateway=https://live.moduyun.com/sms/v1/sendsinglesms
sms.username=5f598c13efb9a3119b148e94
sms.password=5a5b13e4304949eda2432a4cdc83a3a5
sms.sign=\u878d\u534e
sms.internationalGateway=
sms.internationalUsername=
sms.internationalPassword=
#mail setting
spring.mail.host=smtp.126.com
spring.mail.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.username=yuyanke@126.com
spring.mail.password=yp197296
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
# system(发送邮件使用)
spark.system.work-id=1
spark.system.data-center-id=1
spark.system.host=smtp.126.com
spark.system.name=BTXCHAIN
#接收系统通知的邮箱，多个用【,】分割
spark.system.admins=yuyanke@126.com
#通知短信接收手机
spark.system.admin-phones=18036669473,17702569007

#推荐注册奖励:如果下面配置为1，被推荐人必须实名认证推荐人才可获得奖励，否则没有限制，注意与admin模块里面的配置保持统一
commission.need.real-name=1
#开启二级奖励（1=开启）
commission.promotion.second-level=1
#个人推广链接的前缀，随着登录接口返回给客户端。客户端那边与推广码连接，组成个人推广链接。如果有推广注册功能必填
person.promote.prefix=https://www.btxchain.com/reg?code=
#转账接口地址
transfer.url=
transfer.key=
transfer.smac=
#====================================================================================================
#====================================================================================================
#====================================================================================================
#kafka
spring.kafka.bootstrap-servers=172.22.0.6:9092
# 重传次数
spring.kafka.producer.retries=0
# 每次批处理的大小
spring.kafka.producer.batch.size=256
# linger指定的时间等待更多的records出现
spring.kafka.producer.linger=1
# 缓存数据的内存大小
spring.kafka.producer.buffer.memory=1048576
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.session.timeout=15000
spring.kafka.consumer.auto.commit.interval=100
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.group.id=default-group
spring.kafka.consumer.concurrency=9
spring.kafka.consumer.maxPollRecordsConfig=50
spring.devtools.restart.enabled=true
#Geetest
geetest.captchaId=a196f1e67e0e474f87f96558c2c5548e
geetest.privateKey=7de8d0665e6581b2de3a8c90ff553893
geetest.newFailback=0
#upload
spring.http.multipart.maxFileSize=10MB
spring.http.multipart.maxRequestSize=10MB
#datasource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=200
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
#jpa
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true
spring.jpa.hibernate.ddl-auto=update
#actuator 监控配置（可选）
management.context-path=/monitor
management.security.enabled=false
security.user.name=test2
security.user.password=test112**3828**@#&@
#freemarker
spring.freemarker.cache=false
spring.freemarker.template-loader-path=classpath:/templates
#json
spring.jackson.serialization.indent_output=true
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#devtools

#创瑞短信
access.key.id=
access.key.secret=

# 腾讯防水验证
#water.proof.app.id=2040846200
#water.proof.app.secret.key=098wG2E_Mmq8_Hor_ejpxnw**
water.proof.app.id=2076680797
water.proof.app.secret.key=0eVVmPN6KW4aGPDjGW73YpQ**

#ES配置文件
es.username=
es.password=
es.mine.index=
es.mine.type=
es.public.ip=
es.private.ip=#
es.port=9200